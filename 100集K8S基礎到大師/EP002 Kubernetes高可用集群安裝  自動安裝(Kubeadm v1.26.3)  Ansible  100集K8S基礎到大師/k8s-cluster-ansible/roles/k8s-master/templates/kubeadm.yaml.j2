apiVersion: kubeadm.k8s.io/v1beta3
bootstrapTokens:
- groups:
  - system:bootstrappers:kubeadm:default-node-token
  token: {{ kubeadm_token | default(lookup('pipe', 'kubeadm token generate')) }}
  ttl: 24h0m0s
  usages:
  - signing
  - authentication
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: {{ ansible_host }}
  bindPort: 6443
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: {{ inventory_hostname }}
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/control-plane
    value: ""
---
apiServer:
  certSANs:
  - {{ k8s_lb.vip }}
  - {{ ansible_host }}
  - {{ inventory_hostname }}
  - kubernetes
  - kubernetes.default
  - kubernetes.default.svc
  extraArgs:
    authorization-mode: Node,RBAC
    enable-admission-plugins: NodeRestriction
  timeoutForControlPlane: 4m0s
apiVersion: kubeadm.k8s.io/v1beta3
certificatesDir: /etc/kubernetes/pki
clusterName: {{ cluster_name }}
controlPlaneEndpoint: {{ k8s_lb.vip }}:{{ k8s_lb.port }}
controllerManager:
  extraArgs:
    bind-address: 0.0.0.0
etcd:
  local:
    dataDir: /var/lib/etcd
imageRepository: {{ k8s_image_repository | default('registry.k8s.io') }}
kind: ClusterConfiguration
kubernetesVersion: v{{ k8s_version | regex_replace('-.*$', '') }}
networking:
  dnsDomain: {{ kubernetes_config.cluster_domain }}
  podSubnet: {{ pod_network_cidr }}
  serviceSubnet: {{ service_network_cidr }}
scheduler:
  extraArgs:
    bind-address: 0.0.0.0
