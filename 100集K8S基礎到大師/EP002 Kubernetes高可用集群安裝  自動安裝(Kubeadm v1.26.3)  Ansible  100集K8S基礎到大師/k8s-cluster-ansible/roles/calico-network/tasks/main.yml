---
- name: Create calico directory
  file:
    path: "{{ calico_config.manifest_dir }}"
    state: directory
    mode: '0755'

- name: Download Calico operator manifest
  get_url:
    url: "https://raw.githubusercontent.com/projectcalico/calico/{{ calico_version }}/manifests/tigera-operator.yaml"
    dest: "{{ calico_config.manifest_dir }}/tigera-operator.yaml"
    mode: '0644'
  register: operator_download
  retries: 3
  delay: 5
  until: operator_download is success

- name: Download Calico custom resources manifest
  get_url:
    url: "https://raw.githubusercontent.com/projectcalico/calico/{{ calico_version }}/manifests/custom-resources.yaml"
    dest: "{{ calico_config.manifest_dir }}/custom-resources.yaml"
    mode: '0644'
  register: resources_download
  retries: 3
  delay: 5
  until: resources_download is success

- name: Configure Calico custom resources
  template:
    src: custom-resources.yaml.j2
    dest: "{{ calico_config.manifest_dir }}/custom-resources.yaml"
    mode: '0644'

- name: Apply Calico operator
  kubernetes.core.k8s:
    state: present
    src: "{{ calico_config.manifest_dir }}/tigera-operator.yaml"
    wait: yes
    wait_timeout: 300

- name: Wait for operator to be ready
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: tigera-operator
    namespace: tigera-operator
    wait: yes
    wait_timeout: 300
    wait_condition:
      type: Available
      status: "True"

- name: Apply Calico custom resources
  kubernetes.core.k8s:
    state: present
    src: "{{ calico_config.manifest_dir }}/custom-resources.yaml"
    wait: yes
    wait_timeout: 300

- name: Wait for calico-node DaemonSet
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: DaemonSet
    name: calico-node
    namespace: calico-system
    wait: yes
    wait_timeout: 300
    wait_condition:
      type: Available
      status: "True"

- name: Wait for calico-kube-controllers Deployment
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: calico-kube-controllers
    namespace: calico-system
    wait: yes
    wait_timeout: 300
    wait_condition:
      type: Available
      status: "True"

- name: Verify all Calico pods are running
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: calico-system
    wait: yes
    wait_timeout: 300
    wait_condition:
      type: Ready
      status: "True"
  register: calico_pods

- name: Display Calico pods status
  debug:
    msg: "Pod {{ item.metadata.name }} is ready"
  loop: "{{ calico_pods.resources }}"
  when: calico_pods.resources is defined
